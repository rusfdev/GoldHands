.input {
  background-color: #fff;
  border: 1px solid var(--color-1);
  color: var(--color-text-dark);
  border-radius: 4px;
  transition: border-color $trs1;
  position: relative;
  --px: 19px;

  input, textarea {
    width: 100%;
    font-size: 16px;
    line-height: 24px;
    padding: 20px var(--px) 4px var(--px);
    font-weight: 300;
    &::placeholder {
      color: var(--color-text-muted);
      transition: opacity $trs1;
    }
    &:focus {
      &::placeholder {
        opacity: 0;
      }
    }
    &:required {
      & + label {
        &::after {
          content: '*';
          color: var(--color-5);
        }
      }
    }
  }

  input {
    &:-webkit-autofill {
      -webkit-text-fill-color: var(--color-text-dark);
      box-shadow: 0 0 0px 1000px transparent inset;
      transition: background-color 5000s;
    }
    &[type="password"] {
      font-family: small-caption;
      letter-spacing: 2px;
    }
  }

  textarea {
    min-height: 140px;
  }

  label {
    font-size: 16px;
    line-height: 24px;
    position: absolute;
    top: 12px;
    left: var(--px);
    font-weight: 300;
    pointer-events: none;
    transition: font-weight $trs1, transform $trs1, font-size $trs1, line-height $trs1;
    color: var(--color-2);
  }

  &_filled {
    border-color: var(--color-4);
  }
  &_focused {
    border-color: var(--color-2);
  }
  &_filled, &_focused, input:-webkit-autofill ~ {
    label {
      font-size: 10px;
      line-height: 14px;
      font-weight: 400;
      transform: translate(0.05em, -6px);
    }
  }
}

.filter-input {
  max-width: 125px;
  span {
    display: block;
    position: absolute;
    left: 12px;
    top: 9px;
    font-size: 14px;
    line-height: 20px;
    pointer-events: none;
    color: var(--color-text);
  }
  input {
    font-size: 14px;
    line-height: 20px;
    padding: 9px var(--px) 9px 34px;
    font-weight: 400;
    &::placeholder {
      color: var(--color-1);
    }
  }
}

.password-toggle {
  position: absolute;
  cursor: pointer;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  transition: color $trs1;
  color: var(--color-2);
  .icon {
    display: block;
    width: 24px;
    height: 24px;
  }
  &[data-touch], &[data-hover] {
    color: var(--color-4);
  }
  input[type="text"] ~ & {
    color: var(--color-4);
  }
}

.search {
  &__input {
    input {
      padding: 12px var(--px) 12px 46px;
      font-weight: 400;
    }
    .icon {
      display: block;
      width: 18px;
      height: 18px;
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      pointer-events: none;
    }
  }
}

.checkbox {
  position: relative;
  cursor: default;
  display: block;
  input {
    display: none;
    &:checked + span {
      color: var(--color-text);
      &:before {
        border-color: var(--color-text-dark);
      }
      .icon {
        opacity: 1;
        stroke-dashoffset: 0;
      }
    }
    &:disabled + span {
      color: var(--color-7);
      cursor: default;
      &:before {
        border-color: var(--color-7);
      }
    }
  }
  & > span {
    cursor: pointer;
    display: block;
    position: relative;
    font-weight: 300;
    padding-left: 30px;
    color: var(--color-text-muted);
    transition: color $trs1;
    &:before {
      content: '';
      display: block;
      width: 20px;
      height: 20px;
      border: 1px solid var(--color-1);
      border-radius: 3px;
      position: absolute;
      top: 2px;
      left: 0;
      transition: border-color $trs1;
    }
    .icon {
      --length: 11.13660717010498;
      display: block;
      width: 12px;
      height: 12px;
      position: absolute;
      left: 4px;
      top: 6px;
      transition: stroke-dashoffset $trs1, opacity $trs1;
      opacity: 0;
      stroke-dasharray: var(--length) var(--length);
      stroke-dashoffset: calc(var(--length) * -1);
    }
  }
  &[data-touch], &[data-hover] {
    & > span {
      color: var(--color-text);
    }
  }
}

.select {
  --text-size: 16px;
  --line-height: 24px;
  --py: 12px;
  --px: 16px;
  --radius: 4px;
  --pr: 42px;
  position: relative;
  z-index: 100;
  select, .ss-single-selected {
    display: block;
    padding: var(--py) var(--pr) var(--py) var(--px);
    border: 1px solid var(--color-1);
    border-radius: var(--radius);
    font-size: var(--text-size);
    line-height: var(--line-height);
    background-color: var(--color-background-1);
    cursor: pointer;
    user-select: none;
    min-width: 250px;
  }

  .ss-main {
    position: relative;   
  }
  .ss-single-selected {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    position: relative;
  }

  .ss-arrow {
    display: block;
    position: absolute;
    right: var(--px);
    top: 50%;
    transform: translateY(-50%);
    .icon {
      width: 100%;
      height: 100%;
      display: block;
      stroke-width: 1.5px;
    }
    .arrow-down, .arrow-up {
      display: block;
      width: 16px;
      height: 16px;
      transition: transform var(--trs-1);
    }
    .arrow-up {
      transform: rotate(180deg);
    }
  }
  .ss-deselect, .ss-search {
    display: none;
  }
  .ss-content {
    position: absolute;
    width: 100%;
    background-color: #fff;
    border: 1px solid var(--color-1);
    border-radius: var(--radius);
    padding: var(--py) var(--px);
    top: calc(100% + 10px);
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--trs-1), visibility var(--trs-1);
    z-index: 1000;
    &.ss-open {
      opacity: 1;
      visibility: visible;
    }
  }
  
  .ss-list {
    
  }
  
  .ss-option {
    cursor: pointer;
    display: block;
    transition: color var(--trs-1);
    &:not(:last-child) {
      margin-bottom: 10px;
    }
    &[data-touch], &[data-hover] {
      color: var(--color-text-accent);
    }
    &.ss-disabled {
      color: var(--color-text-muted);
      cursor: default;
    }
    &.ss-option-selected {
      color: var(--color-text-accent);
    }
  }
}